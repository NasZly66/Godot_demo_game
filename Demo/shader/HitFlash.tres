[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://dr1nf542280wb"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_cfkw7"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_0450q"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_q5b55"]
parameter_name = "Hit"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fqwm7"]
input_name = "color"

[resource]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool Hit = false;



void fragment() {
// BooleanParameter:4
	bool n_out4p0 = Hit;


// ColorConstant:3
	vec4 n_out3p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Input:5
	vec4 n_out5p0 = COLOR;


	vec3 n_out2p0;
// If:2
	float n_in2p1 = 1.00000;
	float n_in2p2 = 0.00001;
	if(abs((n_out4p0 ? 1.0 : 0.0) - n_in2p1) < n_in2p2)
	{
		n_out2p0 = vec3(n_out3p0.xyz);
	}
	else if((n_out4p0 ? 1.0 : 0.0) < n_in2p1)
	{
		n_out2p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out2p0 = vec3(n_out5p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out2p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeIf_cfkw7")
nodes/fragment/2/position = Vector2(80, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_0450q")
nodes/fragment/3/position = Vector2(-320, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeBooleanParameter_q5b55")
nodes/fragment/4/position = Vector2(-340, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_fqwm7")
nodes/fragment/5/position = Vector2(-360, 420)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 2, 3, 4, 0, 2, 0, 5, 0, 2, 4, 5, 0, 2, 5)
